{"posts":[{"title":"Leetcode21.合并两个有序链表","text":"21. 合并两个有序链表 - 力扣（LeetCode） 使用迭代的方式 创建哨兵节点避免单独处理头节点。 123456789101112131415161718192021222324252627/** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode * } */func mergeTwoLists(list1 *ListNode, list2 *ListNode) *ListNode { dummy := &amp;ListNode{} cur := dummy for list1 != nil &amp;&amp; list2 != nil { if list1.Val &lt; list2.Val { cur.Next = list1 list1 = list1.Next } else { cur.Next = list2 list2 = list2.Next } cur = cur.Next } if list1 != nil { cur.Next = list1 } else { cur.Next = list2 } return dummy.Next} 使用递归的方式 123456789101112131415161718192021/** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode * } */func mergeTwoLists(list1 *ListNode, list2 *ListNode) *ListNode { if list1 == nil { return list2 } if list2 == nil { return list1 } if list1.Val &lt; list2.Val { list1.Next = mergeTwoLists(list1.Next, list2) return list1 } list2.Next = mergeTwoLists(list1, list2.Next) return list2}","link":"/2024/05/04/Leetcode21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/"},{"title":"Leetcode1-两数之和","text":"1. 两数之和 - 力扣（LeetCode） 哈希表的应用，比较简单。 123456789101112func twoSum(nums []int, target int) []int { dict := make(map[int]int) for i, num := range nums { other := target - num j, ok := dict[other] if ok { return []int{i, j} } dict[num] = i } return []int{-1, -1}}","link":"/2024/05/05/Leetcode1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"},{"title":"Hexo主题","text":"最佳的10个主题https://blog.ailln.com/v2ai/2018/11/20/others/5-top-10-hexo-theme/ 第一个真的有点好看。 icarus这个主题我爱上了。 12$ npm install hexo-theme-icarus$ hexo config theme icarus 安装起来非常容易。但是我还不知道怎么设置侧边栏、设置类别、打tag和调整版式。 另外，我也不知道怎么方便地在markdown里加图片，需要搞个图床吗？还是有点麻烦的。 这个主题有一个预览页，里面的每篇博客都是使用教学。","link":"/2024/05/04/hexo%E4%B8%BB%E9%A2%98/"},{"title":"Leetcode26-删除有序数组中的重复项","text":"26. 删除有序数组中的重复项 - 力扣（LeetCode） 快慢指针。 1234567891011func removeDuplicates(nums []int) int { slow, fast := 0,0 for fast &lt; len(nums) { if nums[fast] != nums[slow] { slow ++ nums[slow] = nums[fast] } fast++ } return slow + 1}","link":"/2024/05/05/Leetcode26-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/"},{"title":"Hexo使用方法","text":"创建hexo仓库123npm install hexo-cli -g // 安装hexohexo -v // 查看hexo的版本hexo init // 初始化hexo仓库 新建博客和本地预览123hexo c // 清理当前缓存文件hexo g // 生成html文件hexo s // 本地部署 自定义部署修改_config.yml 123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: git@github.com:yiluqingtai/yiluqingtai.github.io.git branch: master 部署 1hexo d // 自定义部署 当前仓库在pc的hexo文件夹上 基本操作写作创建新文章或页面 1$ hexo new [layout] &lt;title&gt; 布局Hexo 有三种默认布局（layout）：post、page 和 draft。在创建这三种不同类型的文件时，它们将会被保存到不同的路径。 布局 路径 作用 post source/_posts 博客或文章，用于展示和发布博客内容，通常包含标题、正文、日期和标签等信息，并按照日期归档和排序。 page source 静态页面，用于展示不经常变动的内容，如关于页面、联系页面等。 draft source/_drafts 用于标记未完成或未发布的文章或页面的特殊状态。当你正在编写一篇文章或页面时，你可以将其标记为草稿，以便稍后完成和发布。 发布草稿可通过 publish 命令将草稿移动到 source/_posts 文件夹，该命令的使用方式与 new 十分类似，您也可在命令中指定 layout 来指定布局。 1$ hexo publish [layout] &lt;title&gt; 草稿默认不会显示在页面中，您可在执行时加上 --draft 参数，或是在 _config.yml 中把 render_drafts 参数设为 true 来预览草稿。 参考文献Hexo搭建个人博客-并部署到Github上托管(Windows)","link":"/2024/05/04/hexo%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"},{"title":"Markdown配置图床","text":"工具typora+picgo+sm.ms typora：markdown编辑器 picgo：图片上传服务 sm.ms：图床 图床也可以使用阿里云、GitHub等，但我使用Github没折腾成功（可能是token的问题）。sm.ms使用比较方便。 步骤 下载PicGo； 注册sm.ms，获取API Token； 设置图床 typora配置上传服务 在typora粘贴图片时，右键图片，点击上传图片，就可以将图片上传到图床上了。 参考文献【PicGO 】打造免费、快速、稳定的私人图床 - 知乎 (zhihu.com)","link":"/2024/05/04/markdown%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/"},{"title":"文章汇总","text":"综合 Linux工具快速教程 ‒ Linux Tools Quick Tutorial linux工具教程 Linux命令大全(手册) – 真正好用的Linux命令在线查询网站 前景 · Go语言中文文档 Node.js npm 安装包的路径在哪里 Linux 8. top linux下的任务管理器 ‒ Linux Tools Quick Tutorial 计算机硬件 简单区分CPU的单核和多核 音频AAC 音视频编解码技术(二):AAC 音频编码技术 - 灰色飘零 - 博客园 AAC音频编码之–概念介绍 音频编码格式介绍-AAC 12｜如何编码出一个AAC文件？-快手 · 移动端音视频开发实战-极客时间 网络RSS 高效获取信息，你需要这份 RSS 入门指南 - 少数派 PT站 保姆喂饭级新手发种教程 - 主教程篇","link":"/2024/05/05/%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"LC-简单","slug":"LC-简单","link":"/tags/LC-%E7%AE%80%E5%8D%95/"},{"name":"链表","slug":"链表","link":"/tags/%E9%93%BE%E8%A1%A8/"},{"name":"★★","slug":"★★","link":"/tags/%E2%98%85%E2%98%85/"},{"name":"数组","slug":"数组","link":"/tags/%E6%95%B0%E7%BB%84/"},{"name":"★","slug":"★","link":"/tags/%E2%98%85/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"每日一题","slug":"每日一题","link":"/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"},{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"},{"name":"Markdown","slug":"Markdown","link":"/categories/Markdown/"},{"name":"汇总","slug":"汇总","link":"/categories/%E6%B1%87%E6%80%BB/"}],"pages":[]}